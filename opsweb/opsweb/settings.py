"""
Django settings for opsweb project.

Generated by 'django-admin startproject' using Django 1.11.13.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys
import datetime
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, "apps"))

# Celery settings
CELERY_BROKER_URL = 'redis://120.132.21.5:6379/0'
CELERY_RESULT_BACKEND = 'django-db'  # 任务执行直接入库
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Shanghai'
CELERYD_MAX_TASKS_PER_CHILD = 20  # 每个worker最多执行20个任务就会被销毁，可防止内存泄露
# CELERYBEAT_SCHEDULER = 'django_celery_beat.schedulers.DatabaseScheduler'
# CELERYD_LOG_FILE = BASE_DIR + "/logs/celery/celery.log"         # log路径
# CELERYBEAT_LOG_FILE = BASE_DIR + "/logs/celery/beat.log"     # beat log路径

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# swagger login/out
LOGIN_URL = 'rest_framework:login'
LOGOUT_URL = 'rest_framework:logout'


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3fmd##wdqcjrtp#g8$jzw&$pkrbs^+z%(+nx@2ahr4v3e-dg_3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',   # 跨域
    'guardian',     # 对象级权限组件
    'rest_framework',
    'rest_framework_docs',
    'django_celery_beat',  # celery定时任务，需要clie
    'django_celery_results',  # 定时任务入库
    'channels', # 支持 websocket
    'rest_framework_swagger',  # swagger
    'django_filters',
    'cmdb.apps.CmdbConfig',
    'account.apps.AccountConfig',
    'tasks.apps.TasksConfig',
    'release.apps.ReleaseConfig',
    'projects.apps.ProjectsConfig',
    'sqlmng.apps.SqlmngConfig',
    'medias.apps.MediasConfig',
    'workflow.apps.WorkflowConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # 跨域设置
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# 对象级权限
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend', # default
    'guardian.backends.ObjectPermissionBackend',
)


CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True

# 跨域允许所有域名
CORS_ORIGIN_WHITELIST = (
    '*',
)

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
)

# channels 配置根路由指向通道
ASGI_APPLICATION = 'opsweb.routing.application'

#
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('120.132.21.5', 6379)],
        },
    },
}

ROOT_URLCONF = 'opsweb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'opsweb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'devops_mac',
        'USER': 'root',
        'PASSWORD': 'qq4027721',
        'HOST': '120.132.21.5',
        'PORT': 3306,
        'OPTIONS': {
            'init_command': 'SET default_storage_engine=INNODB;',
        },
    }
}

# user_profile
AUTH_USER_MODEL = "account.UserProfile"



# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# 指定上传访问地址
MEDIA_URL = '/media/'

MEDIA = {
    'sql_file_path': 'files/download/sql/handle_result/'
}

# 指定上传目录
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 邮件设置
MAIL = {
    'smtp_host': 'smtp.163.com',  # 邮件服务器
    'smtp_port': 25,  # SMTP协议默认端口是25
    'mail_user': 'sql_see@163.com',  # 邮件用户名
    'mail_pass': 'see123',  # 授权码
    'see_addr': 'http://xxx.xxx.xxx.xxx:81',  # see项目访问地址
}

# inception settings
INCEPTION_SETTINGS = {
    'file_path': '/etc/inc.cnf'
}

#optimize设置
OPTIMIZE_SETTINGS = {
    'sqladvisor_cli': '/usr/bin/sqladvisor',
    'soar_cli': '/usr/local/SOAR/bin/soar'
}

REST_FRAMEWORK = {
    "PAGE_SIZE": 10,
    # 默认全局分页
    # "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination"
    # 自定义分页
    "DEFAULT_PAGINATION_CLASS": "cmdb.pagination.Pagination",
    # filter
    "DEFAULT_FILTER_BACKENDS": (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),

    # 定义全局权限
    # 'DEFAULT_PERMISSION_CLASSES': (
    #     'rest_framework.permissions.DjangoModelPermissions',
    #     # 'opsweb.permissions.Permissions',
    #     # 'rest_framework.permissions.AllowAny',
    # ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # json web token 验证
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        # CSRF验证
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    )
}

JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=7)
}

# jenkins 配置
JENKINS_URL = 'http://120.132.21.5:8080'
JENKINS_TOKEN = 'c9595c464126adbb77752813c0606df1'
JENKINS_USERNAME = 'admin'
JENKINS_PASSWORD = 'awd0123!@#'


# gitlab
GITLAB_HTTP_URI = 'http://120.132.2.223'
GITLAB_TOKEN = 'tERi2r9hLPz7nkJmzPnc'

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'verbose': {'format': '%(asctime)s %(levelname)s %(message)s'},
#         'simple': {'format': '%(levelname)s %(message)s'},
#         'default': {
#             'format': '%(asctime)s [%(name)s:%(lineno)d] [%(levelname)s] - %(message)s',
#             'datefmt': '%Y-%m-%d %H:%M:%S'
#         }
#     },
#     'handlers': {
#         'null': {
#             'level': 'DEBUG',
#             'class': 'logging.NullHandler',
#         },
#         # 'sentry': {
#         #     'level': 'ERROR',
#         #     'class': 'raven.contrib.django.raven_compat.handlers.SentryHandler',
#         #     'tags': {'custom-tag': 'x'},
#         # },
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#             'formatter': 'default'
#         },
#         'django': {
#             'level': 'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename': os.path.join(BASE_DIR, 'logs', 'django.log'),
#             'formatter': 'default'
#
#         },
#         'root_handler': {
#             'level': 'DEBUG',
#             'class': 'logging.handlers.TimedRotatingFileHandler',
#             'formatter': 'default',
#             'filename': os.path.join(BASE_DIR, 'logs', 'server.log'),
#             'when': 'D',
#             'interval': 1,
#             'encoding': 'utf8',
#         },
#         'django_request_handler':{
#             'level': 'DEBUG',
#             'class': 'logging.handlers.TimedRotatingFileHandler',
#             'formatter': 'default',
#             'filename': os.path.join(BASE_DIR, 'logs', 'request.log'),
#             'when': 'D',
#             'interval': 7,
#             'encoding': 'utf8',
#         },
#         'django_db_backends_handler':{
#             'level': 'DEBUG',
#             'class': 'logging.handlers.TimedRotatingFileHandler',
#             'formatter': 'verbose',
#             'filename': os.path.join(BASE_DIR, 'logs', 'db_backends.log'),
#             'when': 'D',
#             'interval': 7,
#         }
#     },
#     'loggers' : {
#         'django': {
#             'level': 'DEBUG',
#             'handlers': ['django'],
#             'propagate': False
#         },
#         'django.request': {
#             'handlers': ['django_request_handler'],
#             'level': 'DEBUG',
#             'propagate': False,
#         },
#         'django.db.backends': {
#             'handlers': ['django_db_backends_handler'],
#             'level': 'DEBUG',
#             'propagate': False,
#         }
#     },
#     'root':{
#         'level': 'DEBUG',
#         'handlers': ['root_handler']
#     }
# }
