import django_filtersfrom django.db.models import Qfrom .models import *from django.contrib.auth.models import Group, Permissionclass UserFilter(django_filters.FilterSet):    keywords = django_filters.CharFilter(method="search_keyword")    def search_keyword(self, queryset, name, value):        return queryset.filter(Q(username__icontains=value) | Q(email__icontains=value))    class Meta:        model = UserProfile        fields = ["keywords"]class GroupFilter(django_filters.FilterSet):    keywords = django_filters.CharFilter(method="search_keyword")    def search_keyword(self, queryset, name, value):        return queryset.filter(Q(name__icontains=value))    class Meta:        model = Group        fields = ["keywords"]class PermissionFilter(django_filters.FilterSet):    keywords = django_filters.CharFilter(method="search_keyword")    def search_keyword(self, queryset, name, value):        return queryset.filter(Q(codename__icontains=value))    class Meta:        model = Permission        fields = ["keywords"]